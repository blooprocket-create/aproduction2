
function money(n){return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD'}).format(n||0)}async function getOwnedIds(){const t=localStorage.getItem('novus:token');if(!t)return new Set();const me=await API.get('me',!0).catch(()=>null);if(me?.owned)return new Set(me.owned.map(c=>c.id));return new Set()}async function renderCourses(){const grid=document.getElementById('courseGrid');if(!grid)return;const {courses=[]}=await API.get('courses-list').catch(()=>({courses:[]}));const ownedIds=await getOwnedIds();const featured=courses.slice().sort((a,b)=>(b.sales||0)-(a.sales||0)).slice(0,4);const toShow=(featured.length?featured:courses).slice(0,4);grid.innerHTML='';if(toShow.length===0){grid.innerHTML="<p class='sub'>No courses published yet.</p>";return}toShow.forEach(c=>{const owned=ownedIds.has(c.id);const el=document.createElement('div');el.className='card';el.innerHTML=`<div style="aspect-ratio:16/9;border-radius:12px;border:1px solid var(--border);background:linear-gradient(120deg, rgba(0,246,255,.18), transparent 40%), url('${c.image||'assets/course.png'}') center/cover no-repeat"></div><h3>${c.title}</h3><div class="meta">${c.level||""} â€¢ ${c.hours||0} hrs</div><p class="sub">${c.description||""}</p><div class="flex" style="justify-content:space-between;margin-top:10px"><div class="price">${money(c.price)}</div>${owned?`<a class="btn" href="course_${c.slug}.html">Open</a>`:`<button class="btn" data-buy="${c.id}">Buy</button>`}</div>`;grid.appendChild(el)});grid.querySelectorAll('[data-buy]').forEach(btn=>btn.addEventListener('click',async e=>{const id=e.currentTarget.getAttribute('data-buy');const u=currentUser();if(!u){if(confirm('You need an account to buy. Create one now?'))location.href='register.html?next=account.html';return}const out=await API.post('purchase',{courseId:id},!0);if(out.error){alert(out.error);return}alert('Access granted! Visit My Courses.');location.href='account.html'}))}