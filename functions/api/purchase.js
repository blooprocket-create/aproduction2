const {pool}=require('./util/db'); const {json,badRequest,readJSON,unauthorized}=require('./util/http'); const {getAuth}=require('./util/guard'); exports.handler=async(e)=>{ if(e.httpMethod!=='POST') return json(405,{error:'Method Not Allowed'}); const a=getAuth(e); if(!a) return unauthorized(); const {courseId}=await readJSON(e); if(!courseId) return badRequest('courseId required.'); const c=await pool.connect(); try{ await c.query('BEGIN'); await c.query('INSERT INTO purchases (user_id, course_id) VALUES ($1,$2) ON CONFLICT DO NOTHING',[a.id,courseId]); await c.query('UPDATE courses SET sales=COALESCE(sales,0)+1 WHERE id=$1',[courseId]); await c.query('COMMIT'); return json(200,{ok:true}); } catch(e){ await c.query('ROLLBACK'); throw e; } finally{ c.release(); } };