const {pool}=require('./util/db');const {json,badRequest,readJSON,unauthorized,forbidden}=require('./util/http');const {getAuth,requireRole}=require('./util/guard');exports.handler=async(e)=>{if(e.httpMethod!=='POST') return json(405,{error:'Method Not Allowed'});const a=getAuth(e);if(!a) return unauthorized();if(!requireRole(a,['admin','editor'])) return forbidden();const {id,title,description,hours,level,price,image,published}=await readJSON(e);if(!id) return badRequest('id required');const c=await pool.connect();try{const r=await c.query('UPDATE courses SET title=COALESCE($2,title), description=COALESCE($3,description), hours=COALESCE($4,hours), level=COALESCE($5,level), price=COALESCE($6,price), image=COALESCE($7,image), published=COALESCE($8,published) WHERE id=$1 RETURNING id,title,slug,description,hours,level,price,image,published,sales',[id,title,description,hours,level,price,image,typeof published==='boolean'?published:null]);if(r.rowCount===0) return json(404,{error:'Course not found'});return json(200,{course:r.rows[0]})}finally{c.release()}};